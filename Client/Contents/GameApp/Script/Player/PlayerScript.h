#pragma once
#include "Helper/InputSyncer.h"

// 
enum class ePlayerStateType
{
	IDLE,		// 대기 중
	MOVE,		// 움직이는 중
	JUMP,		// 점프 중
	MOVE_FIRE	// 불을 옮기는 중
};

class BurnObjectScript;

class PlayerScript : public MonoBehaviour
{
public:
	_MONOBEHAVIOUR_INIT(PlayerScript);
public:
	void Start();
	void Update();
	virtual void OnCollisionEnter(Rigidbody* _origin, Rigidbody* _destination) override;
	virtual void OnCollisionStay(Rigidbody* _origin, Rigidbody* _destination) override;
	virtual void OnCollisionExit(Rigidbody* _origin, Rigidbody* _destination) override;
private:
	// 1p, 2p 플레이어 구분용도
	SerializeField(INT,		mPlayerHandle, 0);
	// 내부에서 사용할 Player가 가진 컴포넌트 포인터
	Animator*				mAnimator = nullptr;
	PlayerController*		mPlayerController = nullptr;
	BurnObjectScript*		mBurnObjectScript;

	////////////////////////////////////////////////
	// [02/02 ~] 주형 작업 - 플레이어 체력 관련
	// 필요 변수 : 
	// 1. 플레이어의 체력 (0~100의 정수 값)
	// 2. 체력 소모 틱 (몇 초마다 체력을 깎을 것인가? 에 대한 틱)
	// 3. 체력 소모 카운터 (체력 소모가 되는 틱을 계산하기 위한 카운터)
	////////////////////////////////////////////////
	SerializeField(INT,		mPlayerHP, 100);			// Player Hp (0~100의 정수 값)
	SerializeField(FLOAT,	mHpReduceTick, 1.0f);		// 불이 켜져있을 때 몇 초 마다 HP가 깎일 것인가?
	SerializeField(FLOAT,	mHpReduceCount, 0.0f);		// 몇 초가 지났는가? mHpReduceTick보다 높으면 체력을 깎고 카운터를 Tick만큼 감소
	////////////////////////////////////////////////
	// [02/02 ~] 주형 작업 - 플레이어 FSM
	// 필요 변수 : 
	// 액션 중인지 여부 (액션중에는 움직이지 못하게 하기 위해)
	// 
	////////////////////////////////////////////////
	bool					isAction = false;
	ePlayerStateType		mPlayerState = ePlayerStateType::IDLE;
public:
	virtual json Serialize() override;
	virtual void Deserialize(json& j) override;
};
